name: Build Firmware

on:
  workflow_call:
    secrets:
      SIGNATURE_KEY:
        required: true
    outputs:
      combined-fwbundle-artifact:
        description: "The combined firmware bundle artifact name"
        value: ${{ jobs.build-combined-fwbundle.outputs.combined-fwbundle-artifact }}
  push:
    branches:
      - main
      - v*-branch
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main
      - v*-branch

concurrency:
  group: ${{ github.workflow }}-build-fw-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# TODO: read boards / board revs from a YAML file (generate a matrix)
# possibly using https://github.com/marketplace/actions/files-to-matrix
jobs:
  genboards:
    runs-on: ubuntu-24.04
    outputs:
      boards: ${{ steps.genboards.outputs.boards }}
    steps:
      - uses: actions/checkout@v4
      - id: genboards
        run: |
          echo "boards=$(jq -c '.' .github/boards.json)" | tee -a $GITHUB_OUTPUT

  build:
    runs-on: ubuntu-24.04
    needs: genboards
    strategy:
      fail-fast: false
      matrix:
        board: ${{ fromJson(needs.genboards.outputs.boards) }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: tt-zephyr-platforms
          ref: ${{ github.ref }}
      - uses: ./tt-zephyr-platforms/.github/workflows/prepare-zephyr
        with:
          app-path: tt-zephyr-platforms

      - name: Generate BOARD
        working-directory: tt-zephyr-platforms
        shell: bash
        run: |
          BOARD="$(./scripts/rev2board.sh "${{ matrix.board }}")"
          echo "BOARD=$BOARD" | tee "$GITHUB_ENV"

      - name: Check signing key
        shell: bash
        run: |
          SIGNATURE_KEY_FILE="$(mktemp)"
          echo "${{ secrets.SIGNATURE_KEY }}" | base64 -d > "$SIGNATURE_KEY_FILE"
          SZ=$(wc -c "$SIGNATURE_KEY_FILE" | awk '{print $1}')
          if [ $SZ -gt 42 ]; then
            echo "SIGNATURE_KEY_FILE=$SIGNATURE_KEY_FILE" >> "$GITHUB_ENV"
          fi

      - name: Build firmware bundle
        shell: bash
        run: |
          if [ "$BOARD" = "" ]; then
            echo "BOARD is not set"
            exit 1
          fi

          west build \
            -d build-${{ matrix.board }} \
            --sysbuild \
            -p \
            -b $BOARD \
            tt-zephyr-platforms/app/smc \
            -- \
              -DCONFIG_COMPILER_WARNINGS_AS_ERRORS=y \
              -DCONFIG_MCUBOOT_SIGNATURE_KEY_FILE=\"\$SIGNATURE_KEY_FILE\"

      - name: Upload firmware assets
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.board }}
          path: |
            build-${{ matrix.board }}/update.fwbundle
            build-${{ matrix.board }}/**/.config
            build-${{ matrix.board }}/**/devicetree_generated.h
            build-${{ matrix.board }}/**/zephyr.bin
            build-${{ matrix.board }}/**/zephyr.dts
            build-${{ matrix.board }}/**/zephyr.elf
            build-${{ matrix.board }}/**/zephyr.hex
            build-${{ matrix.board }}/**/zephyr.map
            build-${{ matrix.board }}/**/zephyr.signed.bin
            build-${{ matrix.board }}/**/zephyr.signed.hex
            build-${{ matrix.board }}/**/zephyr.stat

  build-recovery:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          path: tt-zephyr-platforms
          ref: ${{ github.ref }}
      - uses: ./tt-zephyr-platforms/.github/workflows/prepare-zephyr
        with:
          app-path: tt-zephyr-platforms

      - name: Build recovery firmware
        shell: bash
        run: |
          west build \
            -d build-recovery \
            -p auto \
            -b tt_blackhole@p100a/tt_blackhole/smc \
            tt-zephyr-platforms/app/smc \
            -- \
              -DEXTRA_CONF_FILE=recovery.conf \
              -DCONFIG_COMPILER_WARNINGS_AS_ERRORS=y

      - name: Upload recovery assets
        uses: actions/upload-artifact@v4
        with:
          name: recovery
          path: |
            build-recovery/**/.config
            build-recovery/**/devicetree_generated.h
            build-recovery/**/zephyr.bin
            build-recovery/**/zephyr.dts
            build-recovery/**/zephyr.elf
            build-recovery/**/zephyr.hex
            build-recovery/**/zephyr.map
            build-recovery/**/zephyr.stat

  build-assembly-test:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        board:
          - p150
          - p300
    steps:
      - uses: actions/checkout@v4
        with:
          path: tt-zephyr-platforms
          ref: ${{ github.ref }}
      - uses: ./tt-zephyr-platforms/.github/workflows/prepare-zephyr
        with:
          app-path: tt-zephyr-platforms

      - name: Generate BOARD
        shell: bash
        run: |
          case "${{ matrix.board }}" in
            p150) BOARD=tt_blackhole@p150a/tt_blackhole/dmc;;
            p300) BOARD=p300/tt_blackhole/dmc;;

            *) echo "Unknown board: ${{ matrix.board }}"; exit 1;;
          esac
          echo "BOARD=$BOARD" | tee "$GITHUB_ENV"

      - name: Build assembly firmware
        shell: bash
        run: |
          if [ "$BOARD" = "" ]; then
            echo "BOARD is not set"
            exit 1
          fi

          west build \
            -d build-assembly-test-${{ matrix.board }} \
            --sysbuild \
            -S rtt-console \
            -p \
            -b $BOARD \
            tt-zephyr-platforms/app/dmc \
            -- \
              -DCONFIG_COMPILER_WARNINGS_AS_ERRORS=y \
              -DCONFIG_MCUBOOT_SIGNATURE_KEY_FILE=\"\$SIGNATURE_KEY_FILE\" \
              -DCONFIG_TT_ASSEMBLY_TEST=y

      - name: Sanitize Ref Name
        id: sanitize
        run: |
          REF_NAME="${{ github.ref_name }}"
          SANITIZED=$(echo "$REF_NAME" | sed 's/[ /]/_/g')
          echo "sanitized_ref_name=$SANITIZED" >> $GITHUB_OUTPUT

      - name: Rename default to test expectations
        shell: bash
        run: |
            mkdir assembly-test-preflash
            cp build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.elf assembly-test-preflash/${{ matrix.board }}-bootloader-${{ steps.sanitize.outputs.sanitized_ref_name }}.elf
            cp build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.signed.hex assembly-test-preflash/${{ matrix.board }}-app-${{ steps.sanitize.outputs.sanitized_ref_name }}.signed.hex

      - name: Upload firmware assets
        uses: actions/upload-artifact@v4
        with:
          name: assembly-fw-${{ matrix.board }}
          path: |
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/.config
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/**/devicetree_generated.h
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.bin
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.dts
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.elf
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.hex
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.map
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.signed.bin
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.signed.hex
            build-assembly-test-${{ matrix.board }}/dmc/zephyr/zephyr.stat

      - name: Upload mcuboot assets
        uses: actions/upload-artifact@v4
        with:
          name: assembly-mcuboot-${{ matrix.board }}
          path: |
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/.config
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/**/devicetree_generated.h
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.bin
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.dts
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.elf
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.hex
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.map
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.signed.bin
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.signed.hex
            build-assembly-test-${{ matrix.board }}/mcuboot/zephyr/zephyr.stat

      - name: Upload test collateral
        uses: actions/upload-artifact@v4
        with:
          name: assembly-test-${{ matrix.board }}-${{ steps.sanitize.outputs.sanitized_ref_name }}
          path: assembly-test-preflash/**

  build-combined-fwbundle:
    runs-on: ubuntu-24.04
    needs: build
    outputs:
      combined-fwbundle-artifact: ${{ steps.set_combined_fwbundle_output.outputs.combined_fwbundle_artifact }}
    steps:
      - uses: actions/checkout@v4
        with:
          path: tt-zephyr-platforms
          ref: ${{ github.ref }}

      - name: Download firmware artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: firmware-*
          path: tt-zephyr-platforms

      - name: Build Combined Firmware Bundle
        shell: bash
        run: |
          pip install pykwalify
          BUNDLE_TEMP_PREFIX="$PWD/tt-zephyr-platforms/firmware-" \
            ./tt-zephyr-platforms/scripts/build-combined-fwbundle.sh

      - name: Upload Combined Firmware Bundle Assets
        uses: actions/upload-artifact@v4
        with:
          name: combined-fwbundle
          path: |
            fw_pack*.fwbundle

      - id: set_combined_fwbundle_output
        run: echo "combined_fwbundle_artifact=combined-fwbundle" >> $GITHUB_OUTPUT

  build-bh-flm:
    runs-on: ubuntu-24.04
    name: Build Blackhole Flash Loader Module
    steps:
      - uses: actions/checkout@v4
        with:
          path: tt-zephyr-platforms
          ref: ${{ github.ref }}
      - uses: ./tt-zephyr-platforms/.github/workflows/prepare-zephyr
        with:
          app-path: tt-zephyr-platforms
      - name: Build Flash Loader Module
        working-directory: ./tt-zephyr-platforms/scripts/tooling/blackhole_recovery/data/bh_flm
        shell: bash
        run: |
          ./build-flm.sh
