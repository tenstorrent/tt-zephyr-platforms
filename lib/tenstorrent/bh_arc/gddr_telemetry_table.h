/*
 * Copyright (c) 2024 Tenstorrent AI ULC
 * SPDX-License-Identifier: Apache-2.0
 */

#ifndef GDDR_TELEMETRY_TABLE_H
#define GDDR_TELEMETRY_TABLE_H

/* ***************************************
 *      THIS FILE IS AUTO GENERATED
 * ***************************************
 * *** DO NOT EDIT THIS FILE MANUALLY ****
 * To edit, modify
 * gddr_telemetry_table.yaml and run make.
 * ***************************************
 */
#include <stdint.h>

#define GDDR_TELEMETRY_TABLE_T_VERSION (0x00000002)

typedef struct {
	uint32_t telemetry_table_version;
	/* To be incremented if the fields change functionality, size or order. */
	uint16_t dram_temperature_top;
	/* Temperature in Celsius of the top DRAM die */
	uint16_t dram_temperature_bottom;
	/* Temperature in Celsius of the bottom DRAM die */
	uint16_t dram_speed;
	/* Speed in Mbps */
	uint8_t training_complete;
	/* 0 = Incomplete, 1 = Complete */
	uint8_t gddr_error;
	/* 0 = No error, 1 = Error. Will be set on any fatal error to FW (e.g. training fails). */
	uint16_t mrisc_fw_version_major;
	/* MRISC Major Firmware version number */
	uint16_t mrisc_fw_version_minor;
	/* MRISC Minor Firmware version number */
	uint32_t dram_vendor;
	/* 0 = Unknown, 1 = Samsung_C_Die, 2 = Micron_C_Die, 3 = Micron_E_Die */
	uint8_t corr_edc_rd_errors;
	/* Saturates at 255. Number of cumulative corrected EDC errors on read since reset. */
	uint8_t corr_edc_wr_errors;
	/* Saturates at 255. Number of cumulative corrected EDC errors on write since reset. */
	uint8_t uncorr_edc_rd_error;
	/* 1 if any uncorrected EDC errors on read since reset. */
	uint8_t uncorr_edc_wr_error;
	/* 1 if any uncorrected EDC errors on write since reset. */
} gddr_telemetry_table_t;

#endif
