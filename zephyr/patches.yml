patches:
  - path: zephyr/arch-arc-core-support-multilevel-interrupt-priority.patch
    sha256sum: f54c22822565e99a5fee4fbf8a56a88c0c21c180ca90d8db980810b4787452eb
    module: zephyr
    author: Daniel DeGrasse
    email: ddegrasse@tenstorrent.com
    date: 2025-09-16
    comments: |
      Support multilevel interrupt priority on ARC cores.
  - path: zephyr/check-compliance.patch
    sha256sum: 6dba8fade73d86b8d07e73599b326f89355d0d6806a1bef55508d631d505e0c3
    module: zephyr
    author: Chris Friedt
    email: cfriedt@tenstorrent.com
    date: 2025-01-15
    upstreamable: true
    merge-pr: https://github.com/zephyrproject-rtos/zephyr/pull/84054
    merge-status: true
    merge-date: 2025-04-22
    comments: |
      Fix upstream check_compliance.py to be usable by other modules.
      Update: This has a few extra changes so cannot be dropped yet.
  - path: zephyr/arc-multilvl-int.patch
    sha256sum: fe33bdd040c7f89b848d17193aca3777e1b2c2d71d21f909aa202fb68bf024da
    module: zephyr
    author: Aaron Fong
    email: afong@tenstorrent.com
    date: 2025-02-07
    upstreamable: true
    merge-pr: https://github.com/zephyrproject-rtos/zephyr/pull/92269
    comments: |
      Add support for multilevel interrupts on the ARC architecture.
  - path: zephyr/i2c-dw-multi-ints.patch
    sha256sum: 01e793791b6243697362c7d87ab05f90bf0dcc3f14939f101260021c7dd9e11b
    module: zephyr
    author: Aaron Fong
    email: afong@tenstorrent.com
    date: 2025-02-07
    comments: |
      Hack to support the version of the DesignWare I2C hardware that splits the interrupts
      to multiple lines.
  - path: zephyr/gpio-pca-series-pin-get-config.patch
    sha256sum: 7c640a600a922e157cc3f3c0acd244b16eec5fdcaa63370b5b5e1918fcef9a54
    module: zephyr
    author: Chris Friedt
    email: cfriedt@tenstorrent.com
    date: 2025-05-11
    upstreamable: true
    merge-pr: https://github.com/zephyrproject-rtos/zephyr/pull/89791
    comments: |
      The gpio_pca_series driver did not have pin_get_config() implemented. This change adds
      that functionality, with the exception of reading drive strength.
      Update: some minor changes requested on this PR that required ordering another part
      that belongs to the same gpio expander product family. Should be merged before 4.3.0.
  - path: zephyr/pwm-api-tests-skip-zero-duty-cycle-config.patch
    sha256sum: a89daeb64fb3db5f876e7ee3ff0a6a62c6cba11a87949341466de2cca19a80d9
    module: zephyr
    author: Alexander Lay
    email: alexanderlay@tenstorrent.com
    date: 2025-06-18
    upstreamable: false
    merge-pr: https://github.com/zephyrproject-rtos/zephyr/pull/92188
    comments: |
      Add a boolean Kconfig option to skip setting zero duty cycle in pwm api tests.
      This change was rejected as-is. However, I think it can be reworked to be out-of-tree
      only by making the upstream test more flexible via Kconfig.
  - path: zephyr/mspi-dw.patch
    sha256sum: 5e75f668d6b74773c766292020d86e7e4829cb4641044c571a6221404d06e9e8
    module: zephyr
    author: Daniel DeGrasse
    email: ddegrasse@tenstorrent.com
    date: 2025-04-16
    comments: |
      Skip building the upstream mspi-dw and flash-mspi-nor drivers while we have an
      in-tree fork.
  - path: zephyr/dirty-hack-for-tt-hwinit.patch
    sha256sum: 8769469bcab0fda7b9c793dd8f67740fb18ce11c315871790e0c74494f16d71e
    module: zephyr
    author: Chris Friedt
    email: cfriedt@tenstorrent.com
    date: 2025-07-15
    upstreamable: false
    comments: |
      This is a filthy hack to enable TT HWInit and boot error reporting. Our checks should really
      be done from a BIST (aka a POST) launched from the application. Let's burn this with fire
      once we have a proper solution.
  - path: zephyr/k-busy-wait-ns.patch
    sha256sum: 3d8753d4f2d8d803bb0b14bc393f8ee35c46402c029206faa7ea22267dfc500d
    module: zephyr
    author: Lee Zheng
    email: lzheng@tenstorrent.com
    date: 2025-07-25
    upstreamable: false
    comments: |
      Add k_busy_wait_ns() helper for nanosecond busy wait support.
  - path: zephyr/drivers-i2c-i2c-stm32-v2-stability-improvements.patch
    sha256sum: 3e46f31ad757ef94c8b260326a2b145aa64304d14b7d8c1fe9a12bd88c977f4a
    module: zephyr
    author: Hidden
    email: hidden@github.com
    date: 2025-05-05
    upstreamable: true
    merge-pr: https://github.com/zephyrproject-rtos/zephyr/pull/89501
  - path: zephyr/smbus_stm32-pec.patch
    sha256sum: 109616eaa2460b32e82417152f2e54a8c9a7a44c1cb54d488b942f9d38a8715c
    module: zephyr
    author: Andrew Lewycky
    email: alewycky@tenstorrent.com
    date: 2025-07-24
    comments: |
      SMBus controller PEC for smbus_stm32
  - path: zephyr/scripts-pylib-pytest-twister-harness-ensure-serial.patch
    sha256sum: a638bb624dbf6b1a087c21c3312ac574402ef89d9788ce8987fbeb8c69e55e69
    module: zephyr
    author: Daniel DeGrasse
    email: ddegrasse@tenstorrent.com
    date: 2025-09-17
    upstreamable: true
    comments: |
      Ensure that the serial connection is properly closed when terminating the process.
      This prevents issues with lingering connections that can interfere with subsequent tests.
  - path: zephyr/scripts-twister-add-failure_script-parameter-to-run.patch
    sha256sum: eb1db0329a50cc20e536a221b1c8cb641cd09d4fb62e7fb0a3f8eb5fddcecdc3
    module: zephyr
    author: Daniel DeGrasse
    email: ddegrasse@tenstorrent.com
    date: 2025-09-17
    upstreamable: true
    merge-pr: https://github.com/zephyrproject-rtos/zephyr/pull/96180
    comments: |
      Add support for a failure_script parameter to twister. This script will be executed
      whenever a test fails, allowing for custom failure handling such as
      dumping logs, resetting hardware, etc.
  - path: zephyr/zversion-from-conf-py.patch
    sha256sum: 1871c68114204de705c382a2cb34680a13687fedbce0439958866bec6f40ab49
    module: zephyr
    author: James Growden
    email: jgrowden@tenstorrent.com
    date: 2025-08-19
    comments: |
      Make zversion html take project/version settings from conf.py
  - path: zephyr/stm32-bwbr.patch
    sha256sum: 2412831ca1430db92f05a84f81f5000cb879748831fe2d5084839572905ee21d
    module: zephyr
    author: James Growden
    email: jgrowden@tenstorrent.com
    date: 2025-09-18
    comments: |
      Add support for BWBR smbus32 pcalls
  - path: zephyr/jedec-spi-nor-erase-block-size.patch
    sha256sum: 1d5b8698e8e9470e1aeeaed9b92712df6684e729d39081693ce69b0e9eaaf7b8
    module: zephyr
    author: Chris Friedt
    email: cfriedt@tenstorrent.com
    date: 2025-09-23
    upstreamable: true
    merge-pr: https://github.com/zephyrproject-rtos/zephyr/pull/96443
    comments: |
      Add an optional erase-block-size property to the jedec,spi-nor binding so that mcuboot
      does not complain about slot1_size not being defined.
  - path: zephyr/smbus-cancel.patch
    sha256sum: 70a823aa801ce3e19aa1489eb1c5500387f1028d57ec977926f248066ce5f407
    module: zephyr
    author: Andrew Lewycky
    email: alewycky@tenstorrent.com
    date: 2025-07-24
    comments: |
      Add SMBus/I2C transfer cancellation

      Transfer cancellation immediately cancels the current transfer
      and rejects all future transfers until cancellation is reversed.

      Implementations are included for STM32 I2C and SMBus.
